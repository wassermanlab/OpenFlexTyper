#ifndef __IFINDER_H__
#define __IFINDER_H__

#include "ftMapClass.h"
#include <experimental/filesystem>
#include "fmindex.h"
#include "ifmindex.h"
#include <algorithm>

namespace fs = std::experimental::filesystem;

namespace ft {

class IFinder {
public:
    virtual ~IFinder() {}

    ////////////////////////////////////////////////////////////////////////
    /// \brief searchIndexes
    ////////////////////////////////////////////////////////////////////////
    virtual void searchIndexes(ft::FTMap &ftMap) =0;

    ////////////////////////////////////////////////////////////////////////
    /// \brief Finder::addResultsFutures
    ////////////////////////////////////////////////////////////////////////
    virtual void addResultsFutures(std::map<std::string, ft::KmerClass> & indexResults, ft::KmerClass &tmpResult, uint offset) =0;

    ////////////////////////////////////////////////////////////////////////
    /// \brief Finder::overrideFmIndex
    /// \param fmIndex
    ////////////////////////////////////////////////////////////////////////
    virtual void overrideFmIndex(std::shared_ptr<algo::IFmIndex> fmIndex) =0;

    ////////////////////////////////////////////////////////////////////////
    /// \brief parallelSearch
    ////////////////////////////////////////////////////////////////////////
    virtual void parallelSearch(FTMap &ftMap, const fs::path &indexPath, long long offset) =0;

    ////////////////////////////////////////////////////////////////////////
    /// \brief sequentialSearch searches for kmers inside a single FmIndex
    ///        in a sequential way.
    ////////////////////////////////////////////////////////////////////////
    virtual void sequentialSearch(ft::FTMap &ftMap,
                          const fs::path &indexPath,long long offset) =0;

    ////////////////////////////////////////////////////////////////////////
    /// \brief multipleIndexesParallelSearch searches for kmers inside multiple
    ///        indexes in parallel
    ////////////////////////////////////////////////////////////////////////
    virtual void indexParallelSearch(ft::FTMap &ftMap) =0;

    ////////////////////////////////////////////////////////////////////////
    /// \brief multipleIndexesSequentialSearch searches for kmers inside a multiple
    ///        FmIndexes in q sequential way
    ////////////////////////////////////////////////////////////////////////
    virtual void indexSequentialSearch(ft::FTMap &ftMap)= 0;


};
}

#endif // end of Finder class
