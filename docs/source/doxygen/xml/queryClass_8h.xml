<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="queryClass_8h" kind="file" language="C++">
    <compoundname>queryClass.h</compoundname>
    <includes local="no">set</includes>
    <includes local="no">iostream</includes>
    <includes local="no">map</includes>
    <includes refid="ftPropsClass_8h" local="yes">ftPropsClass.h</includes>
    <includedby refid="ftMapClass_8h" local="yes">/home/tixii/Git/OpenFlexTyper/flextyper/includes/ftMapClass.h</includedby>
    <includedby refid="qkMapClass_8h" local="yes">/home/tixii/Git/OpenFlexTyper/flextyper/includes/qkMapClass.h</includedby>
    <includedby refid="kmergenerator_8h" local="yes">/home/tixii/Git/OpenFlexTyper/flextyper/includes/kmergenerator.h</includedby>
    <includedby refid="ikmergenerator_8h" local="yes">/home/tixii/Git/OpenFlexTyper/flextyper/interfaces/ikmergenerator.h</includedby>
    <includedby refid="iwriterbridge_8h" local="yes">/home/tixii/Git/OpenFlexTyper/flextyper/interfaces/iwriterbridge.h</includedby>
    <includedby refid="queryClass_8cpp" local="yes">/home/tixii/Git/OpenFlexTyper/flextyper/src/queryClass.cpp</includedby>
    <incdepgraph>
      <node id="256">
        <label>QSettings</label>
      </node>
      <node id="257">
        <label>LogClass.h</label>
        <link refid="LogClass_8h_source"/>
        <childnode refid="248" relation="include">
        </childnode>
        <childnode refid="253" relation="include">
        </childnode>
        <childnode refid="254" relation="include">
        </childnode>
      </node>
      <node id="249">
        <label>map</label>
      </node>
      <node id="253">
        <label>fstream</label>
      </node>
      <node id="246">
        <label>/home/tixii/Git/OpenFlexTyper/flextyper/includes/queryClass.h</label>
        <link refid="queryClass_8h"/>
        <childnode refid="247" relation="include">
        </childnode>
        <childnode refid="248" relation="include">
        </childnode>
        <childnode refid="249" relation="include">
        </childnode>
        <childnode refid="250" relation="include">
        </childnode>
      </node>
      <node id="252">
        <label>bitset</label>
      </node>
      <node id="248">
        <label>iostream</label>
      </node>
      <node id="250">
        <label>ftPropsClass.h</label>
        <link refid="ftPropsClass_8h_source"/>
        <childnode refid="251" relation="include">
        </childnode>
        <childnode refid="247" relation="include">
        </childnode>
        <childnode refid="252" relation="include">
        </childnode>
        <childnode refid="248" relation="include">
        </childnode>
        <childnode refid="253" relation="include">
        </childnode>
        <childnode refid="254" relation="include">
        </childnode>
        <childnode refid="249" relation="include">
        </childnode>
        <childnode refid="255" relation="include">
        </childnode>
        <childnode refid="256" relation="include">
        </childnode>
        <childnode refid="257" relation="include">
        </childnode>
      </node>
      <node id="251">
        <label>climits</label>
      </node>
      <node id="254">
        <label>chrono</label>
      </node>
      <node id="247">
        <label>set</label>
      </node>
      <node id="255">
        <label>experimental/filesystem</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="272">
        <label>/home/tixii/Git/OpenFlexTyper/flextyper/includes/kmergenerator.h</label>
        <link refid="kmergenerator_8h_source"/>
        <childnode refid="259" relation="include">
        </childnode>
      </node>
      <node id="264">
        <label>/home/tixii/Git/OpenFlexTyper/flextyper/interfaces/iutils.h</label>
        <link refid="iutils_8h_source"/>
        <childnode refid="265" relation="include">
        </childnode>
        <childnode refid="260" relation="include">
        </childnode>
        <childnode refid="261" relation="include">
        </childnode>
        <childnode refid="266" relation="include">
        </childnode>
      </node>
      <node id="260">
        <label>/home/tixii/Git/OpenFlexTyper/flextyper/includes/ftSearch.h</label>
        <link refid="ftSearch_8h_source"/>
      </node>
      <node id="258">
        <label>/home/tixii/Git/OpenFlexTyper/flextyper/includes/queryClass.h</label>
        <link refid="queryClass_8h"/>
        <childnode refid="259" relation="include">
        </childnode>
        <childnode refid="271" relation="include">
        </childnode>
        <childnode refid="272" relation="include">
        </childnode>
        <childnode refid="273" relation="include">
        </childnode>
        <childnode refid="268" relation="include">
        </childnode>
      </node>
      <node id="261">
        <label>/home/tixii/Git/OpenFlexTyper/flextyper/includes/writerbridge.h</label>
        <link refid="writerbridge_8h_source"/>
        <childnode refid="260" relation="include">
        </childnode>
      </node>
      <node id="263">
        <label>/home/tixii/Git/OpenFlexTyper/flextyper/includes/finder.h</label>
        <link refid="finder_8h_source"/>
        <childnode refid="260" relation="include">
        </childnode>
      </node>
      <node id="271">
        <label>/home/tixii/Git/OpenFlexTyper/flextyper/includes/qkMapClass.h</label>
        <link refid="qkMapClass_8h_source"/>
        <childnode refid="259" relation="include">
        </childnode>
      </node>
      <node id="268">
        <label>/home/tixii/Git/OpenFlexTyper/flextyper/interfaces/iwriterbridge.h</label>
        <link refid="iwriterbridge_8h_source"/>
        <childnode refid="261" relation="include">
        </childnode>
        <childnode refid="260" relation="include">
        </childnode>
      </node>
      <node id="270">
        <label>/home/tixii/Git/OpenFlexTyper/fmindex/includes/fmindex.h</label>
        <link refid="fmindex_8h_source"/>
        <childnode refid="263" relation="include">
        </childnode>
        <childnode refid="262" relation="include">
        </childnode>
      </node>
      <node id="273">
        <label>/home/tixii/Git/OpenFlexTyper/flextyper/interfaces/ikmergenerator.h</label>
        <link refid="ikmergenerator_8h_source"/>
        <childnode refid="272" relation="include">
        </childnode>
      </node>
      <node id="265">
        <label>/home/tixii/Git/OpenFlexTyper/flextyper/includes/utils.h</label>
        <link refid="utils_8h_source"/>
        <childnode refid="259" relation="include">
        </childnode>
        <childnode refid="260" relation="include">
        </childnode>
        <childnode refid="261" relation="include">
        </childnode>
        <childnode refid="266" relation="include">
        </childnode>
        <childnode refid="267" relation="include">
        </childnode>
        <childnode refid="268" relation="include">
        </childnode>
      </node>
      <node id="267">
        <label>/home/tixii/Git/OpenFlexTyper/flextyper/interfaces/iqueryextractor.h</label>
        <link refid="iqueryextractor_8h_source"/>
        <childnode refid="266" relation="include">
        </childnode>
        <childnode refid="260" relation="include">
        </childnode>
      </node>
      <node id="262">
        <label>/home/tixii/Git/OpenFlexTyper/flextyper/interfaces/ifinder.h</label>
        <link refid="ifinder_8h_source"/>
        <childnode refid="263" relation="include">
        </childnode>
        <childnode refid="260" relation="include">
        </childnode>
      </node>
      <node id="269">
        <label>/home/tixii/Git/OpenFlexTyper/fmindex/interfaces/ifmindex.h</label>
        <link refid="ifmindex_8h_source"/>
        <childnode refid="263" relation="include">
        </childnode>
        <childnode refid="262" relation="include">
        </childnode>
        <childnode refid="270" relation="include">
        </childnode>
      </node>
      <node id="259">
        <label>/home/tixii/Git/OpenFlexTyper/flextyper/includes/ftMapClass.h</label>
        <link refid="ftMapClass_8h_source"/>
        <childnode refid="260" relation="include">
        </childnode>
        <childnode refid="261" relation="include">
        </childnode>
        <childnode refid="262" relation="include">
        </childnode>
        <childnode refid="264" relation="include">
        </childnode>
        <childnode refid="268" relation="include">
        </childnode>
        <childnode refid="269" relation="include">
        </childnode>
      </node>
      <node id="266">
        <label>/home/tixii/Git/OpenFlexTyper/flextyper/includes/queryextractor.h</label>
        <link refid="queryextractor_8h_source"/>
        <childnode refid="260" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classft_1_1QueryClass" prot="public">ft::QueryClass</innerclass>
    <innernamespace refid="namespaceft">ft</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>QUERYCLASS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>QUERYCLASS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ftPropsClass.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceft" kindref="compound">ft</ref><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="classft_1_1QueryClass" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classft_1_1QueryClass" kindref="compound">QueryClass</ref></highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classft_1_1QueryClass_1a9fdd93df1f397146c31e4c0bd16bf7e2" kindref="member">QueryClass</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>queryID,<sp/>ft::QueryType<sp/>queryType);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classft_1_1QueryClass_1a9fdd93df1f397146c31e4c0bd16bf7e2" kindref="member">QueryClass</ref>();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classft_1_1QueryClass_1ad75bea7c483469be7a8a522626903e88" kindref="member">~QueryClass</ref>();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_qID;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>QueryType<sp/>_qType;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>_qstring;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_count;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;ft::FlagType,<sp/>std::set&lt;std::string&gt;&gt;<sp/>_qFlags;</highlight></codeline>
<codeline lineno="41"></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getqID()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>QueryType<sp/>getqType()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>getQueryString()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getCount()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;ft::FlagType,<sp/>std::set&lt;std::string&gt;&gt;<sp/>getQFlags()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::QIdT<sp/>getQIdT()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;std::string&gt;<sp/>getFlagKmers(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ft::FlagType<sp/>flag)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setQueryString(std::string<sp/>queryString);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setCount(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setFlags(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;ft::FlagType,<sp/>std::set&lt;std::string&gt;&gt;&amp;<sp/>qFlags);</highlight></codeline>
<codeline lineno="64"></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addFlags(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ft::FlagType&amp;<sp/>flagType,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;std::string&gt;&amp;<sp/>kmers);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>addFlag(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ft::FlagType&amp;<sp/>flagType,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>kmer);</highlight></codeline>
<codeline lineno="71"></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>removeFlag(ft::FlagType<sp/>flagType);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>removeKmerFlag(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ft::FlagType&amp;<sp/>flagTyper,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>kmers);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>removeCount();</highlight></codeline>
<codeline lineno="79"></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isQIdTEqual(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ft::QIdT&amp;<sp/>test)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasQueryID(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>qid)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasQueryType(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ft::QueryType&amp;<sp/>qType)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasFlag(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ft::FlagType&amp;<sp/>flag)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasKmerFlag(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ft::FlagType&amp;<sp/>flag,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>kmer)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasNonZeroCount()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classft_1_1QueryClass" kindref="compound">ft::QueryClass</ref><sp/>&amp;q)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classft_1_1QueryClass" kindref="compound">ft::QueryClass</ref><sp/>&amp;q)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>queryTypeToString<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ft::QueryType&amp;<sp/>qType)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(qType)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>REF:</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QUERYTYPE_REF;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ALT:</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QUERYTYPE_ALT;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CRO:</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>QUERYTYPE_CRO;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal">};</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>QUERYCLASS_H</highlight></codeline>
    </programlisting>
    <location file="/home/tixii/Git/OpenFlexTyper/flextyper/includes/queryClass.h"/>
  </compounddef>
</doxygen>
