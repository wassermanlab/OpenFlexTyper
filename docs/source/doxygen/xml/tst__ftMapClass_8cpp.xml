<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="tst__ftMapClass_8cpp" kind="file" language="C++">
    <compoundname>tst_ftMapClass.cpp</compoundname>
    <includes local="no">gtest/gtest.h</includes>
    <includes refid="ftMapClass_8cpp" local="yes">ftMapClass.cpp</includes>
    <includes local="no">fstream</includes>
    <includes local="no">climits</includes>
    <incdepgraph>
      <node id="839">
        <label>fstream</label>
      </node>
      <node id="838">
        <label>gtest/gtest.h</label>
      </node>
      <node id="840">
        <label>climits</label>
      </node>
      <node id="837">
        <label>/home/tixii/Git/OpenFlexTyper/flextyper/test/tst_ftMapClass.cpp</label>
        <link refid="tst__ftMapClass_8cpp"/>
        <childnode refid="838" relation="include">
        </childnode>
        <childnode refid="839" relation="include">
        </childnode>
        <childnode refid="840" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classft_1_1TestFTMap" prot="public">ft::TestFTMap</innerclass>
    <innernamespace refid="namespaceft">ft</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="tst__ftMapClass_8cpp_1a940ad85d9d45ed5e3cb30708b4add8c5" prot="public" static="no">
        <name>TEST_DESCRIPTION</name>
        <param><defname>desc</defname></param>
        <initializer>RecordProperty(&quot;description&quot;, desc)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tixii/Git/OpenFlexTyper/flextyper/test/tst_ftMapClass.cpp" line="21" column="9" bodyfile="/home/tixii/Git/OpenFlexTyper/flextyper/test/tst_ftMapClass.cpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;gtest/gtest.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ftMapClass.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;climits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceft" kindref="compound">ft</ref><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TestFTMap<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>::testing::Test<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetUp()<sp/>{}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TearDown()<sp/>{}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>FTProp::CmdLineArg<sp/>arg;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test_Settings.ini,<sp/>output.tsv,<sp/>false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal">};</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEST_DESCRIPTION(desc)<sp/>RecordProperty(&quot;description&quot;,<sp/>desc)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//ft::FTProp*<sp/>TestFTMap::_ftProps<sp/>=<sp/>new<sp/>ft::FTProp();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//======================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">TEST_F(TestFTMap,<sp/>TestCheckKmer)</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_DESCRIPTION(</highlight><highlight class="stringliteral">&quot;Check<sp/>Kmer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::FTProp<sp/>_ftProps;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>_ftProps.initFromQSettings(arg);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::FTMap<sp/>ftMap(_ftProps);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>ftMap.addKmer(</highlight><highlight class="stringliteral">&quot;AAAA&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(ftMap.checkForKmer(</highlight><highlight class="stringliteral">&quot;AAAA&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ftMap.checkForKmer(</highlight><highlight class="stringliteral">&quot;AAAC&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//======================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">TEST_F(TestFTMap,<sp/>TestCheckQIDT)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_DESCRIPTION(</highlight><highlight class="stringliteral">&quot;check<sp/>QIdT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//bool<sp/>checkQIDT(ft::QIdT<sp/>testQueryObject);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::FTProp<sp/>_ftProps;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>_ftProps.initFromQSettings(arg);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::FTMap<sp/>ftMap(_ftProps);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>ftMap.addQuery(1,<sp/>ft::QueryType::REF);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>ftMap.addQuery(1,<sp/>ft::QueryType::ALT);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>ftMap.addQuery(2,<sp/>ft::QueryType::REF);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::QIdT<sp/>truetest<sp/>=<sp/>std::make_pair(1,<sp/>ft::QueryType::REF);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::QIdT<sp/>truetest2<sp/>=<sp/>std::make_pair(1,<sp/>ft::QueryType::ALT);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::QIdT<sp/>truetest3<sp/>=<sp/>std::make_pair(2,<sp/>ft::QueryType::REF);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::QIdT<sp/>falsetest<sp/>=<sp/>std::make_pair(2,<sp/>ft::QueryType::ALT);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::QIdT<sp/>falsetest2<sp/>=<sp/>std::make_pair(3,<sp/>ft::QueryType::REF);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(ftMap.checkForQIDT(truetest));</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(ftMap.checkForQIDT(truetest2));</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(ftMap.checkForQIDT(truetest3));</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ftMap.checkForQIDT(falsetest));</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ftMap.checkForQIDT(falsetest2));</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//======================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">TEST_F(TestFTMap,<sp/>TestAddQuery)</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_DESCRIPTION(</highlight><highlight class="stringliteral">&quot;Add<sp/>Query&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//void<sp/>addQuery(ft::QueryClass<sp/>query);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::FTProp<sp/>_ftProps;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>_ftProps.initFromQSettings(arg);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::FTMap<sp/>ftMap(_ftProps);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>ftMap.addQuery(1,<sp/>ft::QueryType::REF);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::QIdT<sp/>testGoodQIdT<sp/>=<sp/>std::make_pair(1,<sp/>ft::QueryType::REF);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::QIdT<sp/>testBadQIdT<sp/>=<sp/>std::make_pair(6,<sp/>ft::QueryType::REF);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(ftMap.checkForQIDT(testGoodQIdT));</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_FALSE(ftMap.checkForQIDT(testBadQIdT));</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//======================<sp/>INDEX<sp/>TESTS<sp/>===================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//======================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal">TEST_F(TestFTMap,<sp/>TestAddKmerResults)</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_DESCRIPTION(</highlight><highlight class="stringliteral">&quot;Add<sp/>Kmer<sp/>Results&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//void<sp/>FTMap::addKmerResults(ft::KmerClass<sp/>kmerResult)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::FTProp<sp/>_ftProps;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>_ftProps.initFromQSettings(arg);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::FTMap<sp/>ftMap(_ftProps);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::KmerClass<sp/>testKmer1(</highlight><highlight class="stringliteral">&quot;AAAA&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>testKmer1.addReadID(std::make_pair(1,<sp/>1));</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>testKmer1.addKFlag(ft::FlagType::ABK);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>ftMap.addKmerResults(testKmer1);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::ReadID<sp/>testRID<sp/>=<sp/>std::make_pair(1,<sp/>1);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::KmerClass<sp/>kmer<sp/>=<sp/>ftMap.getKmer(testKmer1.getKmer());</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(kmer.hasFlag(ft::FlagType::ABK));</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(kmer.hasReadID(testRID));</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//======================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">TEST_F(TestFTMap,<sp/>TestAddIndexResults)</highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_DESCRIPTION(</highlight><highlight class="stringliteral">&quot;Add<sp/>Index<sp/>Results&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//void<sp/>addIndexResults(std::set&lt;ft::KmerClass&gt;<sp/>indexResults);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::FTProp<sp/>_ftProps;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>_ftProps.initFromQSettings(arg);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::FTMap<sp/>ftMap(_ftProps);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::KmerClass<sp/>testKmer1(</highlight><highlight class="stringliteral">&quot;AAAA&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>testKmer1.addKPosition(123);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::KmerClass<sp/>testKmer2(</highlight><highlight class="stringliteral">&quot;CCCC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>testKmer2.addKPosition(345);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>ft::KmerClass&gt;<sp/>indexResults;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>indexResults[</highlight><highlight class="stringliteral">&quot;AAAA&quot;</highlight><highlight class="normal">]=<sp/>testKmer1;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>indexResults[</highlight><highlight class="stringliteral">&quot;CCCC&quot;</highlight><highlight class="normal">]<sp/>=<sp/>testKmer2;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>ftMap.addIndexResults(indexResults);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(ftMap.getResults().size(),<sp/>1);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//add<sp/>a<sp/>second<sp/>set<sp/>to<sp/>make<sp/>sure<sp/>it<sp/>doesnt<sp/>override<sp/>existing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>ftMap.addIndexResults(indexResults);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(ftMap.getResults().size(),<sp/>2);</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">//======================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal">TEST_F(TestFTMap,<sp/>TestProcessIndexResults)</highlight></codeline>
<codeline lineno="132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_DESCRIPTION(</highlight><highlight class="stringliteral">&quot;Process<sp/>Index<sp/>Results&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//void<sp/>processIndexResults(std::set&lt;ft::KmerClass&gt;<sp/>indexResults,<sp/>uint<sp/>readLength);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::FTProp<sp/>_ftProps;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>_ftProps.initFromQSettings(arg);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>_ftProps.setTestProps(20,<sp/>100,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::FTMap<sp/>ftMap(_ftProps);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::KmerClass<sp/>testKmer1(</highlight><highlight class="stringliteral">&quot;AAAA&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>testKmer1.addKPosition(123);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::KmerClass<sp/>testKmer2(</highlight><highlight class="stringliteral">&quot;CCCC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>testKmer2.addKPosition(345);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>ft::KmerClass&gt;<sp/>indexResults;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>indexResults[</highlight><highlight class="stringliteral">&quot;AAAA&quot;</highlight><highlight class="normal">]=<sp/>testKmer1;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>indexResults[</highlight><highlight class="stringliteral">&quot;CCCC&quot;</highlight><highlight class="normal">]<sp/>=<sp/>testKmer2;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>ftMap.processIndexResults(indexResults);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::KmerClass<sp/>outputKmer<sp/>=<sp/>ftMap.getKmer(</highlight><highlight class="stringliteral">&quot;AAAA&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::KmerClass<sp/>outputKmer2<sp/>=<sp/>ftMap.getKmer(</highlight><highlight class="stringliteral">&quot;CCCC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(ftMap.checkForKmer(</highlight><highlight class="stringliteral">&quot;AAAA&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(ftMap.checkForKmer(</highlight><highlight class="stringliteral">&quot;CCCC&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(outputKmer.hasReadID(std::make_pair(2,<sp/>1)));</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(outputKmer2.hasReadID(std::make_pair(4,<sp/>1)));</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">//======================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal">TEST_F(TestFTMap,<sp/>TestProcessIndexResults_multipleIndexes<sp/>)</highlight></codeline>
<codeline lineno="161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_DESCRIPTION(</highlight><highlight class="stringliteral">&quot;Process<sp/>Index<sp/>Results&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//void<sp/>processIndexResults(std::set&lt;ft::KmerClass&gt;<sp/>indexResults,<sp/>uint<sp/>readLength);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::FTProp<sp/>_ftProps;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>_ftProps.initFromQSettings(arg);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>_ftProps.setTestProps(20,<sp/>100,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::FTMap<sp/>ftMap(_ftProps);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::KmerClass<sp/>testKmer1(</highlight><highlight class="stringliteral">&quot;AAAA&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>testKmer1.addKPosition(123);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::KmerClass<sp/>testKmer2(</highlight><highlight class="stringliteral">&quot;CCCC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>testKmer2.addKPosition(345);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>ft::KmerClass&gt;<sp/>indexResults;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>indexResults[</highlight><highlight class="stringliteral">&quot;AAAA&quot;</highlight><highlight class="normal">]=<sp/>testKmer1;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>indexResults[</highlight><highlight class="stringliteral">&quot;CCCC&quot;</highlight><highlight class="normal">]<sp/>=<sp/>testKmer2;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>ftMap.processIndexResults(indexResults);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::KmerClass<sp/>outputKmer<sp/>=<sp/>ftMap.getKmer(</highlight><highlight class="stringliteral">&quot;AAAA&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::KmerClass<sp/>outputKmer2<sp/>=<sp/>ftMap.getKmer(</highlight><highlight class="stringliteral">&quot;CCCC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(ftMap.checkForKmer(</highlight><highlight class="stringliteral">&quot;AAAA&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(ftMap.checkForKmer(</highlight><highlight class="stringliteral">&quot;CCCC&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(outputKmer.hasReadID(std::make_pair(2,<sp/>1)));</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_TRUE(outputKmer2.hasReadID(std::make_pair(4,<sp/>1)));</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">//======================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal">TEST_F(TestFTMap,<sp/>TestaddKmersToQueryResults<sp/>)</highlight></codeline>
<codeline lineno="193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/>TEST_DESCRIPTION(</highlight><highlight class="stringliteral">&quot;Process<sp/>Query<sp/>Results&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::set&lt;ft::ReadID&gt;<sp/>addKmersToQueryResults(ft::QueryClass<sp/>query,<sp/>std::set&lt;std::string&gt;<sp/>kmers,<sp/><sp/>std::set&lt;ft::ReadID&gt;<sp/>readIds);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/>ft::FTProp<sp/>_ftProps;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>_ftProps.initFromQSettings(arg);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/>_ftProps.setTestProps(20,<sp/>100,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/>ft::FTMap<sp/>ftMap(_ftProps);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><ref refid="classft_1_1QueryClass" kindref="compound">ft::QueryClass</ref><sp/>query1(1,<sp/>ft::QueryType::REF);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/>std::set&lt;std::string&gt;<sp/>kmers<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;AAAA&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CCCC&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/>ft::KmerClass<sp/>testKmer1(</highlight><highlight class="stringliteral">&quot;AAAA&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/>ft::KmerClass<sp/>testKmer2(</highlight><highlight class="stringliteral">&quot;CCCC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/>ft::ReadID<sp/>a<sp/>=<sp/>{1,1};</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/>ft::ReadID<sp/>b<sp/>=<sp/>{1,2};</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/>ft::ReadID<sp/>c<sp/>=<sp/>{2,1};</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/>testKmer1.addReadID(a);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/>testKmer1.addReadID(b);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/>testKmer1.addReadID(c);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/>testKmer2.addReadID(a);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/>testKmer2.addReadID(b);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/>testKmer2.addReadID(c);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/>ftMap.addKmerResults(testKmer1);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/>ftMap.addKmerResults(testKmer2);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/>std::set&lt;ft::ReadID&gt;<sp/>readIDs;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/>std::set&lt;ft::ReadID&gt;<sp/>expectedResult<sp/>=<sp/>{a,b,c};</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/>std::set&lt;ft::ReadID&gt;<sp/>output<sp/>=<sp/>ftMap.addKmersToQueryResults(query1,<sp/>kmers,<sp/>readIDs);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/>EXPECT_EQ(expectedResult,<sp/>output);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="comment">//======================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal">TEST_F(TestFTMap,<sp/>TestcalculateQueryCount_singles<sp/>)</highlight></codeline>
<codeline lineno="228"><highlight class="normal">{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_DESCRIPTION(</highlight><highlight class="stringliteral">&quot;Process<sp/>Query<sp/>Results&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>int<sp/>FTMap::calculateQueryCount(std::set&lt;ft::ReadID&gt;<sp/>readIDs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::FTProp<sp/>_ftProps;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>_ftProps.initFromQSettings(arg);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>_ftProps.setTestProps(20,<sp/>100,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::FTMap<sp/>ftMap(_ftProps);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::ReadID<sp/>a<sp/>=<sp/>{1,1};</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::ReadID<sp/>b<sp/>=<sp/>{1,2};</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::ReadID<sp/>c<sp/>=<sp/>{2,1};</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>std::set&lt;ft::ReadID&gt;<sp/>readIDs<sp/>=<sp/>{a,b,c};</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>querycount<sp/>=<sp/>ftMap.calculateQueryCount(readIDs);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>expectedcount<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(querycount,<sp/>expectedcount);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="comment">//======================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal">TEST_F(TestFTMap,<sp/>TestcalculateQueryCount_pairs<sp/>)</highlight></codeline>
<codeline lineno="251"><highlight class="normal">{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_DESCRIPTION(</highlight><highlight class="stringliteral">&quot;Process<sp/>Query<sp/>Results&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>int<sp/>FTMap::calculateQueryCount(std::set&lt;ft::ReadID&gt;<sp/>readIDs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::FTProp<sp/>_ftProps;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>_ftProps.initFromQSettings(arg);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>_ftProps.setTestProps(20,<sp/>100,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::FTMap<sp/>ftMap(_ftProps);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::ReadID<sp/>a<sp/>=<sp/>{1,1};</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::ReadID<sp/>b<sp/>=<sp/>{1,2};</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::ReadID<sp/>c<sp/>=<sp/>{2,1};</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>std::set&lt;ft::ReadID&gt;<sp/>readIDs<sp/>=<sp/>{a,b,c};</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>querycount<sp/>=<sp/>ftMap.calculateQueryCount(readIDs);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>expectedcount<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(querycount,<sp/>expectedcount);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="comment">//======================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal">TEST_F(TestFTMap,<sp/>TestAddingReadIDToSet<sp/>)</highlight></codeline>
<codeline lineno="273"><highlight class="normal">{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_DESCRIPTION(</highlight><highlight class="stringliteral">&quot;Process<sp/>Query<sp/>Results&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>int<sp/>FTMap::calculateQueryCount(std::set&lt;ft::ReadID&gt;<sp/>readIDs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::ReadID<sp/>a<sp/>=<sp/>{1,1};</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::ReadID<sp/>b<sp/>=<sp/>{1,2};</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>ft::ReadID<sp/>c<sp/>=<sp/>{2,1};</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>std::set&lt;ft::ReadID&gt;<sp/>readIDs;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>readIDs.insert(a);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>readIDs.size()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(readIDs.size(),<sp/>1);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>readIDs.insert(b);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>readIDs.size()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(readIDs.size(),<sp/>2);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>readIDs.insert(c);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>readIDs.size()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(readIDs.size(),<sp/>3);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>readIDs.insert(a);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>readIDs.size()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>EXPECT_EQ(readIDs.size(),<sp/>3);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/tixii/Git/OpenFlexTyper/flextyper/test/tst_ftMapClass.cpp"/>
  </compounddef>
</doxygen>
