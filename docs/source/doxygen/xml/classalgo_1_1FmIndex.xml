<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classalgo_1_1FmIndex" kind="class" language="C++" prot="public">
    <compoundname>algo::FmIndex</compoundname>
    <basecompoundref prot="public" virt="non-virtual">algo::IFmIndex</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classalgo_1_1FmIndex_1aabff5e669f5dedbcffdc99ae1fcb160f" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool algo::FmIndex::_verbose</definition>
        <argsstring></argsstring>
        <name>_verbose</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tixii/Git/OpenFlexTyper/fmindex/includes/fmindex.h" line="85" column="1" bodyfile="/home/tixii/Git/OpenFlexTyper/fmindex/includes/fmindex.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classalgo_1_1FmIndex_1acf89089364de96f5a528d1ee809f9af3" prot="private" static="no" mutable="no">
        <type>csa_wt&lt; wt_huff&lt; rrr_vector&lt; 256 &gt; &gt;, 512, 1024 &gt;</type>
        <definition>csa_wt&lt;wt_huff&lt;rrr_vector&lt;256&gt; &gt;, 512, 1024&gt; algo::FmIndex::_index</definition>
        <argsstring></argsstring>
        <name>_index</name>
        <briefdescription>
<para>This is the structure of our FmIndex. csa : compressed suffix array wt_huff : wavelet tree huffman rrr : rrr bit vector of the FmIndex For more information, please refere to : <ulink url="https://github.com/simongog/sdsl-lite">https://github.com/simongog/sdsl-lite</ulink>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tixii/Git/OpenFlexTyper/fmindex/includes/fmindex.h" line="95" column="1" bodyfile="/home/tixii/Git/OpenFlexTyper/fmindex/includes/fmindex.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classalgo_1_1FmIndex_1a5f51dfe85be14e5de6c3acb6a0364337" prot="private" static="no" mutable="no">
        <type>long long *</type>
        <definition>long long* algo::FmIndex::_indexPosition</definition>
        <argsstring></argsstring>
        <name>_indexPosition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tixii/Git/OpenFlexTyper/fmindex/includes/fmindex.h" line="96" column="1" bodyfile="/home/tixii/Git/OpenFlexTyper/fmindex/includes/fmindex.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classalgo_1_1FmIndex_1ad895043464fcd44a1ddc97550ac8c85a" prot="private" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex algo::FmIndex::_mtx</definition>
        <argsstring></argsstring>
        <name>_mtx</name>
        <briefdescription>
<para>mtx </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tixii/Git/OpenFlexTyper/fmindex/includes/fmindex.h" line="101" column="1" bodyfile="/home/tixii/Git/OpenFlexTyper/fmindex/includes/fmindex.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classalgo_1_1FmIndex_1a4af4320623a12a605631970024337b22" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t algo::FmIndex::_kmerMapSize</definition>
        <argsstring></argsstring>
        <name>_kmerMapSize</name>
        <briefdescription>
<para>_kmerMapSize </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tixii/Git/OpenFlexTyper/fmindex/includes/fmindex.h" line="106" column="1" bodyfile="/home/tixii/Git/OpenFlexTyper/fmindex/includes/fmindex.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classalgo_1_1FmIndex_1a787358e6089fa445930e6cb35d883c65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>algo::FmIndex::FmIndex</definition>
        <argsstring>()</argsstring>
        <name>FmIndex</name>
        <briefdescription>
<para>FmIndex constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tixii/Git/OpenFlexTyper/fmindex/includes/fmindex.h" line="27" column="1" bodyfile="/home/tixii/Git/OpenFlexTyper/fmindex/src/fmindex.cpp" bodystart="12" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="classalgo_1_1FmIndex_1ac838a3440a7d42b601dc67c96e06a476" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>algo::FmIndex::FmIndex</definition>
        <argsstring>(bool verbose)</argsstring>
        <name>FmIndex</name>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tixii/Git/OpenFlexTyper/fmindex/includes/fmindex.h" line="28" column="1" bodyfile="/home/tixii/Git/OpenFlexTyper/fmindex/src/fmindex.cpp" bodystart="15" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="classalgo_1_1FmIndex_1a36a930c9cf7e6583c9ace0709195bad0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>algo::FmIndex::~FmIndex</definition>
        <argsstring>()</argsstring>
        <name>~FmIndex</name>
        <briefdescription>
<para>~FmIndex destructor </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tixii/Git/OpenFlexTyper/fmindex/includes/fmindex.h" line="33" column="1" bodyfile="/home/tixii/Git/OpenFlexTyper/fmindex/src/fmindex.cpp" bodystart="170" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classalgo_1_1FmIndex_1a13b884f30a3a0209b2ee025fbfcfe6a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; fs::path, fs::path &gt;</type>
        <definition>std::pair&lt; fs::path, fs::path &gt; algo::FmIndex::createFMIndex</definition>
        <argsstring>(const algo::IndexProps &amp;_props, const fs::path &amp;preprocessedFasta)</argsstring>
        <name>createFMIndex</name>
        <param>
          <type>const algo::IndexProps &amp;</type>
          <declname>_props</declname>
        </param>
        <param>
          <type>const fs::path &amp;</type>
          <declname>preprocessedFasta</declname>
        </param>
        <briefdescription>
<para>createFMIndex </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stringToIndex</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tixii/Git/OpenFlexTyper/fmindex/includes/fmindex.h" line="39" column="1" bodyfile="/home/tixii/Git/OpenFlexTyper/fmindex/src/fmindex.cpp" bodystart="57" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classalgo_1_1FmIndex_1aa6376481450ba69f7bc521544ce0ddab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void algo::FmIndex::loadIndexFromFile</definition>
        <argsstring>(const fs::path &amp;indexname)</argsstring>
        <name>loadIndexFromFile</name>
        <param>
          <type>const fs::path &amp;</type>
          <declname>indexname</declname>
        </param>
        <briefdescription>
<para>loadIndexFromFile </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>indexname</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tixii/Git/OpenFlexTyper/fmindex/includes/fmindex.h" line="45" column="1" bodyfile="/home/tixii/Git/OpenFlexTyper/fmindex/src/fmindex.cpp" bodystart="115" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classalgo_1_1FmIndex_1a77553572cf09d50c336aa75758bcae62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ft::KmerClass</type>
        <definition>ft::KmerClass algo::FmIndex::search</definition>
        <argsstring>(const std::string &amp;kmer, u_int maxOcc=200)</argsstring>
        <name>search</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>kmer</declname>
        </param>
        <param>
          <type>u_int</type>
          <declname>maxOcc</declname>
          <defval>200</defval>
        </param>
        <briefdescription>
<para>search </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>queryString</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tixii/Git/OpenFlexTyper/fmindex/includes/fmindex.h" line="53" column="1" bodyfile="/home/tixii/Git/OpenFlexTyper/fmindex/src/fmindex.cpp" bodystart="20" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classalgo_1_1FmIndex_1abb6b033e7f7cca38ee751a969f439f58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void algo::FmIndex::parallelFmIndex</definition>
        <argsstring>(algo::IndexProps &amp;_props)</argsstring>
        <name>parallelFmIndex</name>
        <param>
          <type>algo::IndexProps &amp;</type>
          <declname>_props</declname>
        </param>
        <briefdescription>
<para>parallelFmIndex </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filenames</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>indexNames</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tixii/Git/OpenFlexTyper/fmindex/includes/fmindex.h" line="62" column="1" bodyfile="/home/tixii/Git/OpenFlexTyper/fmindex/src/fmindex.cpp" bodystart="131" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classalgo_1_1FmIndex_1a2a370ef5e6311df542785b40452983ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int algo::FmIndex::indexCount</definition>
        <argsstring>()</argsstring>
        <name>indexCount</name>
        <briefdescription>
<para>parallelFmIndex </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tixii/Git/OpenFlexTyper/fmindex/includes/fmindex.h" line="68" column="1" bodyfile="/home/tixii/Git/OpenFlexTyper/fmindex/src/fmindex.cpp" bodystart="164" bodyend="167"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classalgo_1_1FmIndex_1a283b02df1ea490955d73ca1314ba0355" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>algo::FmIndex::FmIndex</definition>
        <argsstring>(const FmIndex &amp;other)</argsstring>
        <name>FmIndex</name>
        <param>
          <type>const FmIndex &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>FmIndex copy constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>object for the FmIndex to be copied </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tixii/Git/OpenFlexTyper/fmindex/includes/fmindex.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classalgo_1_1FmIndex_1a083d8973b3b1f41e8a0d46dccf745296" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const FmIndex &amp;</type>
        <definition>const FmIndex&amp; algo::FmIndex::operator=</definition>
        <argsstring>(const FmIndex &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const FmIndex &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>operator = assignment operator </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>returns a reference on the assigned object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tixii/Git/OpenFlexTyper/fmindex/includes/fmindex.h" line="82" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/tixii/Git/OpenFlexTyper/fmindex/includes/fmindex.h" line="21" column="1" bodyfile="/home/tixii/Git/OpenFlexTyper/fmindex/includes/fmindex.h" bodystart="21" bodyend="107"/>
    <listofallmembers>
      <member refid="classalgo_1_1FmIndex_1acf89089364de96f5a528d1ee809f9af3" prot="private" virt="non-virtual"><scope>algo::FmIndex</scope><name>_index</name></member>
      <member refid="classalgo_1_1FmIndex_1a5f51dfe85be14e5de6c3acb6a0364337" prot="private" virt="non-virtual"><scope>algo::FmIndex</scope><name>_indexPosition</name></member>
      <member refid="classalgo_1_1FmIndex_1a4af4320623a12a605631970024337b22" prot="private" virt="non-virtual"><scope>algo::FmIndex</scope><name>_kmerMapSize</name></member>
      <member refid="classalgo_1_1FmIndex_1ad895043464fcd44a1ddc97550ac8c85a" prot="private" virt="non-virtual"><scope>algo::FmIndex</scope><name>_mtx</name></member>
      <member refid="classalgo_1_1FmIndex_1aabff5e669f5dedbcffdc99ae1fcb160f" prot="private" virt="non-virtual"><scope>algo::FmIndex</scope><name>_verbose</name></member>
      <member refid="classalgo_1_1FmIndex_1a13b884f30a3a0209b2ee025fbfcfe6a4" prot="public" virt="non-virtual"><scope>algo::FmIndex</scope><name>createFMIndex</name></member>
      <member refid="classalgo_1_1FmIndex_1a787358e6089fa445930e6cb35d883c65" prot="public" virt="non-virtual"><scope>algo::FmIndex</scope><name>FmIndex</name></member>
      <member refid="classalgo_1_1FmIndex_1ac838a3440a7d42b601dc67c96e06a476" prot="public" virt="non-virtual"><scope>algo::FmIndex</scope><name>FmIndex</name></member>
      <member refid="classalgo_1_1FmIndex_1a283b02df1ea490955d73ca1314ba0355" prot="private" virt="non-virtual"><scope>algo::FmIndex</scope><name>FmIndex</name></member>
      <member refid="classalgo_1_1FmIndex_1a2a370ef5e6311df542785b40452983ce" prot="public" virt="non-virtual"><scope>algo::FmIndex</scope><name>indexCount</name></member>
      <member refid="classalgo_1_1FmIndex_1aa6376481450ba69f7bc521544ce0ddab" prot="public" virt="non-virtual"><scope>algo::FmIndex</scope><name>loadIndexFromFile</name></member>
      <member refid="classalgo_1_1FmIndex_1a083d8973b3b1f41e8a0d46dccf745296" prot="private" virt="non-virtual"><scope>algo::FmIndex</scope><name>operator=</name></member>
      <member refid="classalgo_1_1FmIndex_1abb6b033e7f7cca38ee751a969f439f58" prot="public" virt="non-virtual"><scope>algo::FmIndex</scope><name>parallelFmIndex</name></member>
      <member refid="classalgo_1_1FmIndex_1a77553572cf09d50c336aa75758bcae62" prot="public" virt="non-virtual"><scope>algo::FmIndex</scope><name>search</name></member>
      <member refid="classalgo_1_1FmIndex_1a36a930c9cf7e6583c9ace0709195bad0" prot="public" virt="virtual"><scope>algo::FmIndex</scope><name>~FmIndex</name></member>
      <member refid="classalgo_1_1IFmIndex_1a9934efd8cd1f0a96720774ac7043ca58" prot="public" virt="virtual"><scope>algo::FmIndex</scope><name>~IFmIndex</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
